#
# PySNMP MIB module CHUBB-TVBS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///usr/local/snmpsim/mibs/CHUBB-TVBS.mib
# Produced by pysmi-0.3.1 at Mon Aug 15 13:44:30 2022
# On host snmpsim platform Linux version 5.10.102.1-microsoft-standard-WSL2 by user root
# Using Python version 3.4.9 (default, Sep  5 2018, 04:27:05)
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
chubb, products = mibBuilder.importSymbols("CHUBB-ROOT", "chubb", "products")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, Unsigned32, Counter64, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, iso, Bits, Gauge32, ObjectIdentity, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "Counter64", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "iso", "Bits", "Gauge32", "ObjectIdentity", "IpAddress", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tvbsSystem = ModuleIdentity((1, 3, 6, 1, 4, 1, 52330, 5))
tvbsSystem.setRevisions(('2020-01-10 12:00',))
if mibBuilder.loadTexts: tvbsSystem.setLastUpdated('202001101200Z')
if mibBuilder.loadTexts: tvbsSystem.setOrganization('Chubb Systems Ltd')
tvbsSystemAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 1, 5))
tvbsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 5, 1))
tvbsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 5, 4))
tvbsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 5, 2))
tvbsNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 5, 2, 0))
faultCode = MibScalar((1, 3, 6, 1, 4, 1, 52330, 5, 2, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultCode.setStatus('current')
faultDescription1 = MibScalar((1, 3, 6, 1, 4, 1, 52330, 5, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultDescription1.setStatus('current')
faultDescription2 = MibScalar((1, 3, 6, 1, 4, 1, 52330, 5, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultDescription2.setStatus('current')
faultId1 = MibScalar((1, 3, 6, 1, 4, 1, 52330, 5, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultId1.setStatus('current')
faultStatus = MibScalar((1, 3, 6, 1, 4, 1, 52330, 5, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultStatus.setStatus('current')
faultWorkgroup = MibScalar((1, 3, 6, 1, 4, 1, 52330, 5, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultWorkgroup.setStatus('current')
faultLocation = MibScalar((1, 3, 6, 1, 4, 1, 52330, 5, 2, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultLocation.setStatus('current')
faultUsername = MibScalar((1, 3, 6, 1, 4, 1, 52330, 5, 2, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultUsername.setStatus('current')
faultAutoClear = MibScalar((1, 3, 6, 1, 4, 1, 52330, 5, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultAutoClear.setStatus('current')
tvbsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52330, 5, 4, 1)).setObjects(("CHUBB-TVBS-MIB", "faultCode"), ("CHUBB-TVBS-MIB", "faultDescription1"), ("CHUBB-TVBS-MIB", "faultDescription2"), ("CHUBB-TVBS-MIB", "faultId1"), ("CHUBB-TVBS-MIB", "faultStatus"), ("CHUBB-TVBS-MIB", "faultWorkgroup"), ("CHUBB-TVBS-MIB", "faultLocation"), ("CHUBB-TVBS-MIB", "faultUsername"), ("CHUBB-TVBS-MIB", "faultAutoClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tvbsGroup = tvbsGroup.setStatus('current')
tvbsNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 52330, 5, 2, 0, 2)).setObjects(("CHUBB-TVBS-MIB", "logFault"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tvbsNotificationGroup = tvbsNotificationGroup.setStatus('current')
logFault = NotificationType((1, 3, 6, 1, 4, 1, 52330, 5, 2, 0, 1)).setObjects(("CHUBB-TVBS-MIB", "faultCode"), ("CHUBB-TVBS-MIB", "faultDescription1"), ("CHUBB-TVBS-MIB", "faultDescription2"), ("CHUBB-TVBS-MIB", "faultId1"), ("CHUBB-TVBS-MIB", "faultStatus"), ("CHUBB-TVBS-MIB", "faultWorkgroup"), ("CHUBB-TVBS-MIB", "faultLocation"), ("CHUBB-TVBS-MIB", "faultUsername"), ("CHUBB-TVBS-MIB", "faultAutoClear"))
if mibBuilder.loadTexts: logFault.setStatus('current')
mibBuilder.exportSymbols("CHUBB-TVBS-MIB", faultDescription2=faultDescription2, faultUsername=faultUsername, tvbsGroups=tvbsGroups, tvbsObjects=tvbsObjects, faultStatus=faultStatus, tvbsNotificationPrefix=tvbsNotificationPrefix, faultId1=faultId1, tvbsSystemAgent=tvbsSystemAgent, tvbsNotifications=tvbsNotifications, tvbsSystem=tvbsSystem, faultCode=faultCode, faultLocation=faultLocation, logFault=logFault, faultDescription1=faultDescription1, faultWorkgroup=faultWorkgroup, tvbsGroup=tvbsGroup, faultAutoClear=faultAutoClear, tvbsNotificationGroup=tvbsNotificationGroup, PYSNMP_MODULE_ID=tvbsSystem)