#
# PySNMP MIB module CHUBB-TVBS-CAMERA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///usr/local/snmpsim/mibs/CHUBB-TVBS-CAMERA.mib
# Produced by pysmi-0.3.1 at Mon Aug 15 13:46:59 2022
# On host snmpsim platform Linux version 5.10.102.1-microsoft-standard-WSL2 by user root
# Using Python version 3.4.9 (default, Sep  5 2018, 04:27:05)
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
products, chubb = mibBuilder.importSymbols("CHUBB-ROOT", "products", "chubb")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, Counter64, MibIdentifier, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, TimeTicks, Bits, Counter32, IpAddress, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "MibIdentifier", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "TimeTicks", "Bits", "Counter32", "IpAddress", "Integer32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tvbsCamera = ModuleIdentity((1, 3, 6, 1, 4, 1, 52330, 6))
tvbsCamera.setRevisions(('2020-01-10 12:00',))
if mibBuilder.loadTexts: tvbsCamera.setLastUpdated('202001101200Z')
if mibBuilder.loadTexts: tvbsCamera.setOrganization('Chubb Systems Ltd')
tvbsCameraAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 1, 6))
tvbsCameraObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 6, 1))
cameraStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 6, 1, 1))
panPos = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: panPos.setStatus('current')
tiltPos = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tiltPos.setStatus('current')
zoomPos = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zoomPos.setStatus('current')
focusPos = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: focusPos.setStatus('current')
focusMode = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("manual", 0), ("auto", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: focusMode.setStatus('current')
irisMode = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("manual", 0), ("auto", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irisMode.setStatus('current')
carriagewayText = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: carriagewayText.setStatus('current')
compassDirection = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("north", 1), ("northEast", 2), ("east", 3), ("southEast", 4), ("south", 5), ("southWest", 6), ("west", 7), ("northWest", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: compassDirection.setStatus('current')
cameraHealth = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2))
comms = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: comms.setStatus('current')
panMotorFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: panMotorFault.setStatus('current')
tiltMotorFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tiltMotorFault.setStatus('current')
zoomMotorFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zoomMotorFault.setStatus('current')
apertureMotorFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apertureMotorFault.setStatus('current')
focusMotorFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: focusMotorFault.setStatus('current')
wiperMotorFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wiperMotorFault.setStatus('current')
heaterFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: heaterFault.setStatus('current')
fluidLevelFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidLevelFault.setStatus('current')
videoSignalFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: videoSignalFault.setStatus('current')
housingTamper = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("triggered", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: housingTamper.setStatus('current')
washerMotorFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: washerMotorFault.setStatus('current')
configPlugFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configPlugFault.setStatus('current')
tvbuCameraCommsFault = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 1, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tvbuCameraCommsFault.setStatus('current')
logicTable = MibTable((1, 3, 6, 1, 4, 1, 52330, 6, 1, 3), )
if mibBuilder.loadTexts: logicTable.setStatus('current')
logicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52330, 6, 1, 3, 1), ).setIndexNames((0, "CHUBB-TVBS-CAMERA-MIB", "logicID"))
if mibBuilder.loadTexts: logicEntry.setStatus('current')
logicID = MibTableColumn((1, 3, 6, 1, 4, 1, 52330, 6, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicID.setStatus('current')
logicStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52330, 6, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("triggered", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicStatus.setStatus('current')
logicDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 52330, 6, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicDescription.setStatus('current')
tvbsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 6, 2))
tvbsNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 6, 2, 0))
healthChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("panMotor", 0), ("tiltMotor", 1), ("zoomMotor", 2), ("apertureMotor", 3), ("focusMotor", 4), ("wiperMotor", 5), ("heater", 6), ("fluidLevel", 7), ("videoSignal", 8), ("housingTamper", 9), ("washerMotorFault", 10), ("configPlugFault", 11), ("tvbuCameraCommsFault", 12)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: healthChangeReason.setStatus('current')
tamperState = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("triggered", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tamperState.setStatus('current')
logicInput = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 2, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logicInput.setStatus('current')
logicInputState = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("triggered", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logicInputState.setStatus('current')
faultState = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("triggered", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: faultState.setStatus('current')
commsStateReason = MibScalar((1, 3, 6, 1, 4, 1, 52330, 6, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("good", 0), ("faulty", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: commsStateReason.setStatus('current')
healthChange = NotificationType((1, 3, 6, 1, 4, 1, 52330, 6, 2, 0, 1)).setObjects(("CHUBB-TVBS-CAMERA-MIB", "healthChangeReason"), ("CHUBB-TVBS-CAMERA-MIB", "faultState"))
if mibBuilder.loadTexts: healthChange.setStatus('current')
tamperDetected = NotificationType((1, 3, 6, 1, 4, 1, 52330, 6, 2, 0, 2)).setObjects(("CHUBB-TVBS-CAMERA-MIB", "tamperState"))
if mibBuilder.loadTexts: tamperDetected.setStatus('current')
logicInputChange = NotificationType((1, 3, 6, 1, 4, 1, 52330, 6, 2, 0, 3)).setObjects(("CHUBB-TVBS-CAMERA-MIB", "logicInput"), ("CHUBB-TVBS-CAMERA-MIB", "logicInputState"))
if mibBuilder.loadTexts: logicInputChange.setStatus('current')
commsStateChange = NotificationType((1, 3, 6, 1, 4, 1, 52330, 6, 2, 0, 4)).setObjects(("CHUBB-TVBS-CAMERA-MIB", "commsStateReason"))
if mibBuilder.loadTexts: commsStateChange.setStatus('current')
cameraConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 6, 3))
cameraGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 6, 3, 1))
cameraCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 52330, 6, 3, 2))
tvbsCameraObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52330, 6, 3, 1, 1)).setObjects(("CHUBB-TVBS-CAMERA-MIB", "healthChangeReason"), ("CHUBB-TVBS-CAMERA-MIB", "tamperState"), ("CHUBB-TVBS-CAMERA-MIB", "logicInput"), ("CHUBB-TVBS-CAMERA-MIB", "logicInputState"), ("CHUBB-TVBS-CAMERA-MIB", "faultState"), ("CHUBB-TVBS-CAMERA-MIB", "commsStateReason"), ("CHUBB-TVBS-CAMERA-MIB", "panPos"), ("CHUBB-TVBS-CAMERA-MIB", "tiltPos"), ("CHUBB-TVBS-CAMERA-MIB", "zoomPos"), ("CHUBB-TVBS-CAMERA-MIB", "focusPos"), ("CHUBB-TVBS-CAMERA-MIB", "focusMode"), ("CHUBB-TVBS-CAMERA-MIB", "irisMode"), ("CHUBB-TVBS-CAMERA-MIB", "carriagewayText"), ("CHUBB-TVBS-CAMERA-MIB", "compassDirection"), ("CHUBB-TVBS-CAMERA-MIB", "comms"), ("CHUBB-TVBS-CAMERA-MIB", "panMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "tiltMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "zoomMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "apertureMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "focusMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "wiperMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "heaterFault"), ("CHUBB-TVBS-CAMERA-MIB", "fluidLevelFault"), ("CHUBB-TVBS-CAMERA-MIB", "videoSignalFault"), ("CHUBB-TVBS-CAMERA-MIB", "housingTamper"), ("CHUBB-TVBS-CAMERA-MIB", "washerMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "configPlugFault"), ("CHUBB-TVBS-CAMERA-MIB", "tvbuCameraCommsFault"), ("CHUBB-TVBS-CAMERA-MIB", "logicID"), ("CHUBB-TVBS-CAMERA-MIB", "logicStatus"), ("CHUBB-TVBS-CAMERA-MIB", "logicDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tvbsCameraObjectGroup = tvbsCameraObjectGroup.setStatus('current')
tvbsNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 52330, 6, 3, 1, 2)).setObjects(("CHUBB-TVBS-CAMERA-MIB", "healthChange"), ("CHUBB-TVBS-CAMERA-MIB", "tamperDetected"), ("CHUBB-TVBS-CAMERA-MIB", "logicInputChange"), ("CHUBB-TVBS-CAMERA-MIB", "commsStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tvbsNotificationGroup = tvbsNotificationGroup.setStatus('current')
tvbsCameraStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52330, 6, 3, 1, 3)).setObjects(("CHUBB-TVBS-CAMERA-MIB", "panPos"), ("CHUBB-TVBS-CAMERA-MIB", "tiltPos"), ("CHUBB-TVBS-CAMERA-MIB", "zoomPos"), ("CHUBB-TVBS-CAMERA-MIB", "focusPos"), ("CHUBB-TVBS-CAMERA-MIB", "focusMode"), ("CHUBB-TVBS-CAMERA-MIB", "irisMode"), ("CHUBB-TVBS-CAMERA-MIB", "carriagewayText"), ("CHUBB-TVBS-CAMERA-MIB", "compassDirection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tvbsCameraStatusGroup = tvbsCameraStatusGroup.setStatus('current')
tvbsCameraHealthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52330, 6, 3, 1, 4)).setObjects(("CHUBB-TVBS-CAMERA-MIB", "comms"), ("CHUBB-TVBS-CAMERA-MIB", "panMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "tiltMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "zoomMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "apertureMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "focusMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "wiperMotorFault"), ("CHUBB-TVBS-CAMERA-MIB", "heaterFault"), ("CHUBB-TVBS-CAMERA-MIB", "fluidLevelFault"), ("CHUBB-TVBS-CAMERA-MIB", "videoSignalFault"), ("CHUBB-TVBS-CAMERA-MIB", "housingTamper"), ("CHUBB-TVBS-CAMERA-MIB", "washerMotorFault"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tvbsCameraHealthGroup = tvbsCameraHealthGroup.setStatus('current')
tvbsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 52330, 6, 3, 2, 2)).setObjects(("CHUBB-TVBS-CAMERA-MIB", "tvbsCameraObjectGroup"), ("CHUBB-TVBS-CAMERA-MIB", "tvbsNotificationGroup"), ("CHUBB-TVBS-CAMERA-MIB", "tvbsCameraStatusGroup"), ("CHUBB-TVBS-CAMERA-MIB", "tvbsCameraHealthGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tvbsCompliance = tvbsCompliance.setStatus('current')
mibBuilder.exportSymbols("CHUBB-TVBS-CAMERA-MIB", cameraCompliances=cameraCompliances, logicTable=logicTable, commsStateChange=commsStateChange, irisMode=irisMode, housingTamper=housingTamper, logicDescription=logicDescription, focusMotorFault=focusMotorFault, logicInputState=logicInputState, tvbsCompliance=tvbsCompliance, faultState=faultState, tvbsCameraObjectGroup=tvbsCameraObjectGroup, comms=comms, tamperState=tamperState, tiltMotorFault=tiltMotorFault, panPos=panPos, focusPos=focusPos, configPlugFault=configPlugFault, tvbsCameraHealthGroup=tvbsCameraHealthGroup, compassDirection=compassDirection, heaterFault=heaterFault, cameraGroups=cameraGroups, fluidLevelFault=fluidLevelFault, tvbsNotifications=tvbsNotifications, zoomMotorFault=zoomMotorFault, cameraHealth=cameraHealth, apertureMotorFault=apertureMotorFault, wiperMotorFault=wiperMotorFault, logicStatus=logicStatus, healthChange=healthChange, logicInput=logicInput, carriagewayText=carriagewayText, PYSNMP_MODULE_ID=tvbsCamera, cameraStatus=cameraStatus, focusMode=focusMode, logicEntry=logicEntry, zoomPos=zoomPos, healthChangeReason=healthChangeReason, tvbsCameraObjects=tvbsCameraObjects, logicInputChange=logicInputChange, tiltPos=tiltPos, washerMotorFault=washerMotorFault, tvbsCamera=tvbsCamera, videoSignalFault=videoSignalFault, tvbsNotificationGroup=tvbsNotificationGroup, logicID=logicID, commsStateReason=commsStateReason, tamperDetected=tamperDetected, panMotorFault=panMotorFault, tvbsCameraStatusGroup=tvbsCameraStatusGroup, tvbsCameraAgent=tvbsCameraAgent, tvbsNotificationPrefix=tvbsNotificationPrefix, cameraConformance=cameraConformance, tvbuCameraCommsFault=tvbuCameraCommsFault)